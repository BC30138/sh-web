name: Deploy

on: [workflow_dispatch]

env:
  CR_REGISTRY: ${{ secrets.CR_REGISTRY }}
  CR_REPOSITORY: ${{ secrets.CR_REPOSITORY }}
  IMAGE_TAG: sh-web.${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    needs: [flake8, mypy, unittests]
    steps:
      - uses: actions/checkout@v3
      - name: "Create env file"
        run: |
          touch .env
          echo APP_SECRET_KEY=${{ secrets.APP_SECRET_KEY }} >> .env

          echo AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} >> .env
          echo AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} >> .env
          echo AWS_REGION=${{ secrets.AWS_REGION }} >> .env

          echo AWS_USER_POOL_ID=${{ secrets.AWS_USER_POOL_ID }} >> .env
          echo AWS_APP_CLIENT_ID=${{ secrets.AWS_APP_CLIENT_ID }} >> .env
          echo AWS_APP_CLIENT_SECRET=${{ secrets.AWS_APP_CLIENT_SECRET }} >> .env

          echo AWS_CLOUD_FRONT_DOMAIN=${{ secrets.AWS_CLOUD_FRONT_DOMAIN }} >> .env
          echo AWS_CLOUD_FRONT_ID=${{ secrets.AWS_CLOUD_FRONT_ID }} >> .env
          echo S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} >> .env
      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      - name: Build, tag, and push image to Yandex Cloud Container Registry
        run: |
          docker pull cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:latest || true
          docker build --cache-from cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:latest -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
          docker tag cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:latest
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:latest
